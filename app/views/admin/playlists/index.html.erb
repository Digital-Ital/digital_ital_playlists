<div class="container mx-auto px-6 py-10 bg-black/50 rounded-xl backdrop-blur-sm">
  <div class="flex items-center justify-between mb-6">
    <h1 class="text-2xl font-semibold text-white">Playlists Admin</h1>
    <div class="space-x-2">
      <%= link_to 'Admin Dashboard', admin_root_path, class: 'px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-500 transition-colors' %>
      <%= link_to 'Update History', admin_update_logs_path, class: 'px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-500 transition-colors' %>
      <%= link_to 'Manage Categories', admin_categories_path, class: 'px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-500 transition-colors' %>
      <button onclick="startBatchUpdate()" class="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-400 transition-colors font-semibold">
        üîÑ Update All Playlists
      </button>
      <%= link_to 'New Playlist', new_admin_playlist_path, class: 'px-4 py-2 bg-yellow-500 text-black rounded-lg hover:bg-yellow-400 transition-colors' %>
    </div>
  </div>

  <div class="bg-gray-900/80 rounded-xl p-6 mb-8 border border-gray-700">
    <h2 class="text-xl text-white mb-4">Import from Spotify URL</h2>
    <form id="spotify-import-form" class="flex gap-2" onsubmit="return importSpotify(event)">
      <input id="spotify_url" name="spotify_url" class="flex-1 p-3 bg-gray-800 text-white rounded border border-gray-600 focus:border-yellow-500 focus:outline-none" placeholder="https://open.spotify.com/playlist/..." required />
      <button class="px-6 py-3 bg-green-500 text-black rounded-lg hover:bg-green-400 transition-colors font-semibold">Import</button>
    </form>
    <div id="spotify-import-result" class="mt-4 text-white"></div>
  </div>

  <div class="bg-gray-900/60 rounded-xl p-6 border border-gray-700">
    <h2 class="text-xl text-white mb-4">All Playlists</h2>
    <div class="overflow-x-auto">
      <table class="min-w-full text-white">
        <thead>
          <tr class="border-b border-gray-600">
            <th class="text-left p-3 text-yellow-400 font-semibold">Title</th>
            <th class="text-left p-3 text-yellow-400 font-semibold">Categories</th>
            <th class="text-left p-3 text-yellow-400 font-semibold">#</th>
            <th class="text-left p-3 text-yellow-400 font-semibold">Pos</th>
            <th class="text-left p-3 text-yellow-400 font-semibold">‚≠ê</th>
            <th class="text-left p-3 text-yellow-400 font-semibold">üîó</th>
            <th class="text-left p-3 text-yellow-400 font-semibold">Last Updated</th>
            <th class="text-left p-3 text-yellow-400 font-semibold"></th>
          </tr>
        </thead>
        <tbody>
          <% @playlists.each do |playlist| %>
            <tr class="border-b border-gray-700 hover:bg-gray-800/50 transition-colors">
              <td class="p-3 font-medium">
                <div class="max-w-md"><%= playlist.title %></div>
              </td>
              <td class="p-3">
                <% if playlist.categories.any? %>
                  <div class="flex flex-wrap gap-1">
                    <% playlist.categories.each do |category| %>
                      <span class="px-2 py-1 rounded text-xs text-white border" 
                            style="background-color: <%= category.color || '#FDE68A' %>; border-color: <%= category.color || '#FDE68A' %>;">
                        <%= category.name %>
                      </span>
                    <% end %>
                  </div>
                <% else %>
                  <span class="text-gray-400 italic">Uncategorized</span>
                <% end %>
              </td>
              <td class="p-3 text-gray-300 text-sm"><%= playlist.track_count || 0 %></td>
              <td class="p-3 text-gray-300 text-sm"><%= playlist.position || '-' %></td>
              <td class="p-3 text-center">
                <% if playlist.featured? %>
                  <span class="text-yellow-400" title="Featured">‚≠ê</span>
                <% else %>
                  <span class="text-gray-500">-</span>
                <% end %>
              </td>
              <td class="p-3 text-center">
                <% if playlist.spotify_url.present? %>
                  <%= link_to 'üîó', playlist.spotify_url, target: '_blank', class: 'text-green-400 hover:text-green-300', title: 'Open in Spotify' %>
                <% else %>
                  <span class="text-gray-500">-</span>
                <% end %>
              </td>
              <td class="p-3 text-sm">
                <% if playlist.last_updated_at.present? %>
                  <div class="text-gray-300"><%= time_ago_in_words(playlist.last_updated_at) %> ago</div>
                  <div class="text-gray-500 text-xs"><%= playlist.last_updated_at.strftime("%b %d, %Y") %></div>
                <% else %>
                  <span class="text-red-400 font-semibold">Never</span>
                <% end %>
              </td>
              <td class="p-3 text-center space-x-2">
                <%= link_to 'üîÑ', sync_with_spotify_admin_playlist_path(playlist), 
                            data: { turbo_method: :post, turbo_confirm: 'Update this playlist from Spotify?' }, 
                            class: 'text-green-400 hover:text-green-300 text-lg', 
                            title: 'Update from Spotify' %>
                <%= link_to '‚úèÔ∏è', edit_admin_playlist_path(playlist), class: 'text-blue-400 hover:text-blue-300', title: 'Edit' %>
                <%= link_to 'üóëÔ∏è', admin_playlist_path(playlist), data: { turbo_method: :delete, turbo_confirm: 'Delete this playlist?' }, class: 'text-red-400 hover:text-red-300', title: 'Delete' %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
    <%= paginate @playlists %>
  </div>

  <!-- Uncategorized Section -->
  <% if @uncategorized.any? %>
    <div class="bg-gray-900/60 rounded-xl p-6 border border-gray-700 mt-8">
      <h2 class="text-xl text-white mb-4">Uncategorized Playlists</h2>
      <div class="overflow-x-auto">
        <table class="min-w-full text-white">
          <thead>
            <tr class="border-b border-gray-600">
              <th class="text-left p-3 text-yellow-400 font-semibold">Title</th>
              <th class="text-left p-3 text-yellow-400 font-semibold">#</th>
              <th class="text-left p-3 text-yellow-400 font-semibold">Pos</th>
              <th class="text-left p-3 text-yellow-400 font-semibold">‚≠ê</th>
              <th class="text-left p-3 text-yellow-400 font-semibold">üîó</th>
              <th class="text-left p-3 text-yellow-400 font-semibold">Last Updated</th>
              <th class="text-left p-3 text-yellow-400 font-semibold"></th>
            </tr>
          </thead>
          <tbody>
            <% @uncategorized.each do |playlist| %>
              <tr class="border-b border-gray-700 hover:bg-gray-800/50 transition-colors">
                <td class="p-3 font-medium">
                  <div class="max-w-md"><%= playlist.title %></div>
                </td>
                <td class="p-3 text-gray-300 text-sm"><%= playlist.track_count || 0 %></td>
                <td class="p-3 text-gray-300 text-sm"><%= playlist.position || '-' %></td>
                <td class="p-3 text-center">
                  <% if playlist.featured? %>
                    <span class="text-yellow-400" title="Featured">‚≠ê</span>
                  <% else %>
                    <span class="text-gray-500">-</span>
                  <% end %>
                </td>
                <td class="p-3 text-center">
                  <% if playlist.spotify_url.present? %>
                    <%= link_to 'üîó', playlist.spotify_url, target: '_blank', class: 'text-green-400 hover:text-green-300', title: 'Open in Spotify' %>
                  <% else %>
                    <span class="text-gray-500">-</span>
                  <% end %>
                </td>
                <td class="p-3 text-sm">
                  <% if playlist.last_updated_at.present? %>
                    <div class="text-gray-300"><%= time_ago_in_words(playlist.last_updated_at) %> ago</div>
                    <div class="text-gray-500 text-xs"><%= playlist.last_updated_at.strftime("%b %d, %Y") %></div>
                  <% else %>
                    <span class="text-red-400 font-semibold">Never</span>
                  <% end %>
                </td>
                <td class="p-3 text-center space-x-2">
                  <%= link_to 'üîÑ', sync_with_spotify_admin_playlist_path(playlist), 
                              data: { turbo_method: :post, turbo_confirm: 'Update this playlist from Spotify?' }, 
                              class: 'text-green-400 hover:text-green-300 text-lg', 
                              title: 'Update from Spotify' %>
                  <%= link_to '‚úèÔ∏è', edit_admin_playlist_path(playlist), class: 'text-blue-400 hover:text-blue-300', title: 'Edit' %>
                  <%= link_to 'üóëÔ∏è', admin_playlist_path(playlist), data: { turbo_method: :delete, turbo_confirm: 'Delete this playlist?' }, class: 'text-red-400 hover:text-red-300', title: 'Delete' %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
      <%= paginate @uncategorized %>
    </div>
  <% end %>
</div>

<script>
  async function importSpotify(event) {
    event.preventDefault();
    const input = document.getElementById('spotify_url');
    const result = document.getElementById('spotify-import-result');
    result.textContent = 'Importing...';
    try {
      const response = await fetch('<%= import_spotify_admin_playlists_path %>', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json', 'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content },
        body: JSON.stringify({ spotify_url: input.value })
      });
      const data = await response.json();
      if (response.ok) {
        result.innerHTML = `
          <div class="p-4 bg-gray-800 rounded">
            <div class="text-yellow-400 mb-2">Imported!</div>
            <div><strong>Title:</strong> ${data.title}</div>
            ${data.thumbnail_url ? `<img src="${data.thumbnail_url}" class="mt-2 w-48 rounded" />` : ''}
          </div>
        `;
      } else {
        result.textContent = data.error || 'Failed to import.';
      }
    } catch (e) {
      result.textContent = 'Error importing.';
    }
    return false;
  }

  // Batch Update Functions
  let updateInterval = null;

  async function startBatchUpdate() {
    // Show modal
    document.getElementById('batch-update-modal').classList.remove('hidden');
    document.getElementById('progress-bar-fill').style.width = '0%';
    document.getElementById('progress-text').textContent = 'Starting...';
    document.getElementById('current-playlist').textContent = '';
    document.getElementById('close-modal-btn').classList.add('hidden');
    
    try {
      // Start the batch update
      const response = await fetch('<%= start_batch_update_admin_playlists_path %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        }
      });
      
      const data = await response.json();
      if (data.success) {
        // Start polling for progress
        updateInterval = setInterval(checkProgress, 2000); // Check every 2 seconds
      }
    } catch (e) {
      alert('Failed to start batch update: ' + e.message);
      closeModal();
    }
  }

  async function checkProgress() {
    try {
      const response = await fetch('<%= batch_update_progress_admin_playlists_path %>');
      const data = await response.json();
      
      const percent = data.total > 0 ? Math.round((data.current / data.total) * 100) : 0;
      document.getElementById('progress-bar-fill').style.width = percent + '%';
      document.getElementById('progress-text').textContent = `Updating ${data.current} / ${data.total}`;
      document.getElementById('current-playlist').textContent = data.current_playlist || '';
      
      if (data.completed) {
        clearInterval(updateInterval);
        document.getElementById('progress-text').textContent = `‚úÖ Completed! ${data.changes_count} changes found`;
        document.getElementById('current-playlist').textContent = 'All playlists updated successfully';
        document.getElementById('close-modal-btn').classList.remove('hidden');
        
        // Reload the page after 3 seconds
        setTimeout(() => {
          window.location.reload();
        }, 3000);
      }
    } catch (e) {
      console.error('Failed to check progress:', e);
    }
  }

  function closeModal() {
    document.getElementById('batch-update-modal').classList.add('hidden');
    if (updateInterval) {
      clearInterval(updateInterval);
    }
  }
</script>

<!-- Batch Update Modal -->
<div id="batch-update-modal" class="hidden fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-6">
  <div class="bg-gray-900 rounded-2xl p-8 max-w-2xl w-full border-2 border-yellow-500 shadow-2xl">
    <h2 class="text-3xl font-bold text-white mb-6 text-center">
      üîÑ Updating All Playlists
    </h2>
    
    <div class="space-y-6">
      <!-- Progress Bar -->
      <div class="bg-gray-800 rounded-full h-8 overflow-hidden border-2 border-gray-700">
        <div id="progress-bar-fill" class="h-full bg-gradient-to-r from-yellow-500 via-orange-500 to-red-500 transition-all duration-500" style="width: 0%"></div>
      </div>
      
      <!-- Progress Text -->
      <div class="text-center">
        <div id="progress-text" class="text-2xl font-bold text-yellow-400 mb-2">Starting...</div>
        <div id="current-playlist" class="text-gray-300 text-lg min-h-[2rem]"></div>
      </div>
      
      <!-- Info Box -->
      <div class="bg-gray-800/50 rounded-lg p-4 border border-gray-700">
        <p class="text-gray-400 text-sm text-center">
          ‚è±Ô∏è Processing with 30-second delays between playlists to respect Spotify rate limits.<br>
          You can close this popup - the update will continue in the background.
        </p>
      </div>
      
      <!-- Close Button (hidden until complete) -->
      <div class="text-center">
        <button id="close-modal-btn" onclick="closeModal()" class="hidden px-6 py-3 bg-green-500 text-black rounded-lg hover:bg-green-400 transition-colors font-semibold">
          Close & View Results
        </button>
      </div>
    </div>
  </div>
</div>

