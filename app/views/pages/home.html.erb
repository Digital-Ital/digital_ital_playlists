<div class="min-h-screen">
  <!-- Hero Section -->
  <section class="relative overflow-hidden">
    <!-- Animated Background -->
    <div class="absolute inset-0 opacity-20">
      <div class="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-yellow-400 via-red-500 to-green-500 animate-pulse"></div>
      <div class="absolute top-10 left-10 w-32 h-32 bg-yellow-400 rounded-full blur-3xl animate-bounce"></div>
      <div class="absolute top-40 right-20 w-24 h-24 bg-red-500 rounded-full blur-2xl animate-pulse delay-1000"></div>
      <div class="absolute bottom-20 left-1/3 w-28 h-28 bg-green-500 rounded-full blur-3xl animate-bounce delay-500"></div>
    </div>
    
    <div class="relative z-10 container mx-auto px-6 py-20">
      <!-- Header -->
      <div class="text-center mb-16">
        <h1 class="text-6xl md:text-8xl font-bold mb-6">
          <span class="bg-gradient-to-r from-yellow-400 via-red-500 to-green-500 bg-clip-text text-transparent">
            Digital Ital's
          </span>
        </h1>
        <h2 class="text-2xl md:text-4xl font-light text-gray-300 mb-4">
          List of Playlists
        </h2>
        <p class="text-lg text-gray-400 max-w-2xl mx-auto leading-relaxed">
          Daily curation and discoveries from the depths of reggae, dub, hip-hop, and soundsystem culture. 
          Each playlist is a journey through vinyl crates and digital streams.
        </p>
      </div>
      
      <!-- Featured Playlists -->
      <% if @featured_playlists.any? %>
        <div class="mb-20">
          <h3 class="text-3xl font-semibold text-center mb-12 text-gray-200">
            Featured Selections
          </h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            <% @featured_playlists.each do |playlist| %>
              <div class="group cursor-pointer" onclick="window.open('<%= playlist.spotify_url %>', '_blank')">
                <div class="relative overflow-hidden rounded-2xl bg-gradient-to-br from-gray-800 to-gray-900 p-6 transform transition-all duration-300 group-hover:scale-105 group-hover:shadow-2xl group-hover:shadow-yellow-500/20">
                  <!-- Vinyl Record Effect -->
                  <div class="absolute top-4 right-4 w-12 h-12 rounded-full border-4 border-yellow-400 opacity-20"></div>
                  <div class="absolute top-6 right-6 w-8 h-8 rounded-full bg-gray-800"></div>
                  
                  <% if playlist.cover_image_url.present? %>
                    <img src="<%= playlist.cover_image_url %>" alt="<%= playlist.title %>" class="w-full h-48 object-cover rounded-xl mb-4">
                  <% else %>
                    <div class="w-full h-48 bg-gradient-to-br from-yellow-400/20 to-red-500/20 rounded-xl mb-4 flex items-center justify-center">
                      <div class="text-4xl">ðŸŽµ</div>
                    </div>
                  <% end %>
                  
                  <h4 class="text-xl font-semibold text-white mb-2 line-clamp-2">
                    <%= playlist.title %>
                  </h4>
                  <p class="text-gray-400 text-sm mb-3 line-clamp-2">
                    <%= playlist.description %>
                  </p>
                  <div class="flex items-center justify-between text-sm text-gray-500">
                    <span><%= playlist.track_count %> tracks</span>
                    <span class="px-2 py-1 bg-yellow-400/20 text-yellow-400 rounded-full text-xs">
                      <%= playlist.category.name %>
                    </span>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </section>

  <!-- Categories Navigation -->
  <section class="py-16 bg-black/50 backdrop-blur-sm">
    <div class="container mx-auto px-6">
      <h3 class="text-3xl font-semibold text-center mb-12 text-gray-200">
        Explore by Category
      </h3>
      <div id="category-tree" class="space-y-8 mb-16">
        <!-- Show All Button (hidden when already showing all) -->
        <div id="show-all-container" class="text-center">
          <button 
            id="show-all-btn"
            class="category-btn active px-8 py-4 rounded-full border-2 border-yellow-400 text-yellow-400 transition-all duration-300 hover:scale-105 text-lg font-semibold"
            data-category-id=""
          >
            Show All
          </button>
        </div>
        
        <!-- Main Categories Tree -->
        <% @categories.each do |parent_category| %>
          <div class="category-group relative">
            <!-- Parent Category -->
            <div class="text-center mb-6 relative">
              <button 
                class="category-btn parent-category px-8 py-4 rounded-full border-2 border-gray-600 text-gray-300 hover:border-yellow-400 hover:text-yellow-400 transition-all duration-300 hover:scale-105 text-xl font-bold relative z-10"
                data-category-id="<%= parent_category.id %>"
                data-category-color="<%= parent_category.color %>"
                style="border-color: <%= parent_category.color %>; color: <%= parent_category.color %>"
              >
                <%= parent_category.name %>
              </button>
              
              <!-- Vertical line from parent -->
              <% if parent_category.children.any? %>
                <div class="absolute left-1/2 transform -translate-x-1/2 w-1 h-6 bg-gradient-to-b from-<%= parent_category.color.gsub('#', '') %> to-gray-600 opacity-60" style="background: linear-gradient(to bottom, <%= parent_category.color %>, #4B5563);"></div>
              <% end %>
            </div>
            
            <!-- Children Categories with branches -->
            <% if parent_category.children.any? %>
              <div class="relative">
                <!-- Horizontal branch line -->
                <div class="absolute left-1/2 top-0 transform -translate-x-1/2 w-1 h-6 bg-gradient-to-r from-gray-600 to-transparent opacity-40"></div>
                
                <!-- Children in a tree-like layout -->
                <div class="flex flex-wrap justify-center gap-4 relative">
                  <% parent_category.children.each_with_index do |child_category, index| %>
                    <div class="relative flex flex-col items-center">
                      <!-- Vertical branch to child -->
                      <div class="absolute -top-6 left-1/2 transform -translate-x-1/2 w-1 h-6 bg-gradient-to-b from-gray-600 to-<%= child_category.color.gsub('#', '') %> opacity-60" style="background: linear-gradient(to bottom, #4B5563, <%= child_category.color %>);"></div>
                      
                      <!-- Child button -->
                      <button 
                        class="category-btn child-category px-4 py-2 rounded-full border-2 border-gray-600 text-gray-300 hover:border-yellow-400 hover:text-yellow-400 transition-all duration-300 hover:scale-105 text-sm relative z-10"
                        data-category-id="<%= child_category.id %>"
                        data-category-color="<%= child_category.color %>"
                        style="border-color: <%= child_category.color %>; color: <%= child_category.color %>"
                      >
                        <%= child_category.name %>
                      </button>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  </section>

  <!-- Infinite Scroll Playlists -->
  <section class="py-16">
    <div class="container mx-auto px-6">
      <div id="playlists-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
        <!-- Playlists will be loaded here via JavaScript -->
      </div>
      
      <!-- Loading Spinner -->
      <div id="loading-spinner" class="text-center py-12 hidden">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-yellow-400"></div>
        <p class="text-gray-400 mt-4">Loading more playlists...</p>
      </div>
      
      <!-- End of Content -->
      <div id="end-of-content" class="text-center py-12 hidden">
        <p class="text-gray-500">You've reached the end of the playlist collection</p>
        <div class="mt-4 text-4xl">ðŸŽµ</div>
      </div>
    </div>
  </section>
</div>

<script>
  class PlaylistLoader {
    constructor() {
      this.currentOffset = 0;
      this.currentCategory = null;
      this.isLoading = false;
      this.hasMore = true;
      this.container = document.getElementById('playlists-container');
      this.loadingSpinner = document.getElementById('loading-spinner');
      this.endOfContent = document.getElementById('end-of-content');
      
      this.init();
    }
    
    init() {
      this.loadPlaylists();
      this.setupInfiniteScroll();
      this.setupCategoryButtons();
    }
    
    setupInfiniteScroll() {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && this.hasMore && !this.isLoading) {
            this.loadPlaylists();
          }
        });
      });
      
      observer.observe(this.loadingSpinner);
    }
    
    setupCategoryButtons() {
      document.querySelectorAll('.category-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const categoryId = e.target.dataset.categoryId;
          const isParentCategory = e.target.classList.contains('parent-category');
          
          // Update active button
          document.querySelectorAll('.category-btn').forEach(b => {
            b.classList.remove('border-yellow-400', 'text-yellow-400', 'active');
            if (b.classList.contains('parent-category')) {
              b.style.borderColor = b.dataset.categoryColor;
              b.style.color = b.dataset.categoryColor;
            } else if (b.classList.contains('child-category')) {
              b.style.borderColor = b.dataset.categoryColor;
              b.style.color = b.dataset.categoryColor;
            } else {
              b.classList.add('border-gray-600', 'text-gray-300');
            }
          });
          
          // Highlight selected button
          e.target.classList.add('border-yellow-400', 'text-yellow-400', 'active');
          e.target.style.borderColor = '#D4AF37';
          e.target.style.color = '#D4AF37';
          
          // Show/hide "Show All" button
          const showAllContainer = document.getElementById('show-all-container');
          if (categoryId) {
            showAllContainer.style.display = 'block';
          } else {
            showAllContainer.style.display = 'none';
          }
          
          // Reset and load playlists
          this.currentCategory = categoryId || null;
          this.currentOffset = 0;
          this.hasMore = true;
          this.container.innerHTML = '';
          this.endOfContent.classList.add('hidden');
          
          this.loadPlaylists();
        });
      });
    }
    
    async loadPlaylists() {
      if (this.isLoading) return;
      
      this.isLoading = true;
      this.loadingSpinner.classList.remove('hidden');
      
      try {
        const url = this.currentCategory 
          ? `/api/categories/${this.currentCategory}/playlists?offset=${this.currentOffset}`
          : `/api/playlists?offset=${this.currentOffset}`;
          
        const response = await fetch(url);
        const data = await response.json();
        
        if (data.playlists && data.playlists.length > 0) {
          data.playlists.forEach(playlist => {
            this.renderPlaylist(playlist);
          });
          
          this.currentOffset += data.playlists.length;
          this.hasMore = data.has_more;
        } else {
          this.hasMore = false;
        }
        
        if (!this.hasMore) {
          this.endOfContent.classList.remove('hidden');
        }
        
      } catch (error) {
        console.error('Error loading playlists:', error);
      } finally {
        this.isLoading = false;
        this.loadingSpinner.classList.add('hidden');
      }
    }
    
    renderPlaylist(playlist) {
      const playlistElement = document.createElement('div');
      playlistElement.className = 'group cursor-pointer transform transition-all duration-300 hover:scale-105';
      playlistElement.onclick = () => window.open(playlist.spotify_url, '_blank');
      
      playlistElement.innerHTML = `
        <div class="relative overflow-hidden rounded-2xl bg-gradient-to-br from-gray-800 to-gray-900 p-6 group-hover:shadow-2xl group-hover:shadow-yellow-500/20">
          <!-- Vinyl Record Effect -->
          <div class="absolute top-4 right-4 w-12 h-12 rounded-full border-4 border-yellow-400 opacity-20"></div>
          <div class="absolute top-6 right-6 w-8 h-8 rounded-full bg-gray-800"></div>
          
          ${playlist.cover_image_url ? 
            `<img src="${playlist.cover_image_url}" alt="${playlist.title}" class="w-full h-48 object-cover rounded-xl mb-4">` :
            `<div class="w-full h-48 bg-gradient-to-br from-yellow-400/20 to-red-500/20 rounded-xl mb-4 flex items-center justify-center">
              <div class="text-4xl">ðŸŽµ</div>
            </div>`
          }
          
          <h4 class="text-xl font-semibold text-white mb-2 line-clamp-2">
            ${playlist.title}
          </h4>
          <p class="text-gray-400 text-sm mb-3 line-clamp-2">
            ${playlist.description || 'A carefully curated selection of tracks'}
          </p>
          <div class="flex items-center justify-between text-sm text-gray-500">
            <span>${playlist.track_count} tracks</span>
            <span class="px-2 py-1 bg-yellow-400/20 text-yellow-400 rounded-full text-xs">
              ${playlist.category.name}
            </span>
          </div>
        </div>
      `;
      
      this.container.appendChild(playlistElement);
    }
  }
  
  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new PlaylistLoader();
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .category-btn {
    position: relative;
    overflow: hidden;
  }
  
  .category-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
    transition: left 0.5s;
  }
  
  .category-btn:hover::before {
    left: 100%;
  }
  
  /* Tree branch styling */
  .category-group {
    position: relative;
  }
  
  .category-group::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 2px;
    height: 100%;
    background: linear-gradient(to bottom, transparent, rgba(75, 85, 99, 0.3), transparent);
    z-index: 1;
  }
  
  .parent-category {
    position: relative;
    z-index: 10;
  }
  
  .child-category {
    position: relative;
    z-index: 10;
  }
  
  /* Animated tree branches */
  .category-group:hover .parent-category {
    transform: scale(1.05);
    box-shadow: 0 0 20px rgba(212, 175, 55, 0.3);
  }
  
  .child-category:hover {
    transform: scale(1.1);
    box-shadow: 0 0 15px rgba(212, 175, 55, 0.2);
  }
  
  /* Tree trunk effect */
  .category-tree::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 3px;
    background: linear-gradient(to bottom, 
      rgba(139, 69, 19, 0.8) 0%,
      rgba(160, 82, 45, 0.6) 25%,
      rgba(139, 69, 19, 0.4) 50%,
      rgba(160, 82, 45, 0.3) 75%,
      rgba(139, 69, 19, 0.2) 100%
    );
    transform: translateX(-50%);
    z-index: 1;
  }
</style>