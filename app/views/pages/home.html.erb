<div class="min-h-screen">
  <!-- Hero Section -->
  <section class="relative overflow-hidden">
    <!-- Animated Background -->
    <div class="absolute inset-0 opacity-20">
      <div class="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-yellow-400 via-red-500 to-green-500 animate-pulse"></div>
      <div class="absolute top-10 left-10 w-32 h-32 bg-yellow-400 rounded-full blur-3xl animate-bounce"></div>
      <div class="absolute top-40 right-20 w-24 h-24 bg-red-500 rounded-full blur-2xl animate-pulse delay-1000"></div>
      <div class="absolute bottom-20 left-1/3 w-28 h-28 bg-green-500 rounded-full blur-3xl animate-bounce delay-500"></div>
    </div>
    
    <div class="relative z-10 container mx-auto px-6 py-20">
      <!-- Header -->
      <div class="text-center mb-16">
        <h1 class="text-6xl md:text-8xl font-bold mb-6">
          <span class="bg-gradient-to-r from-yellow-400 via-red-500 to-green-500 bg-clip-text text-transparent">
            Digital Ital's
          </span>
        </h1>
        <h2 class="text-2xl md:text-4xl font-light text-gray-300 mb-4">
          List of Playlists
        </h2>
        <p class="text-lg text-gray-400 max-w-2xl mx-auto leading-relaxed">
          Daily curation and discoveries from the depths of reggae, dub, hip-hop, and soundsystem culture. 
          Each playlist is a journey through vinyl crates and digital streams.
        </p>
      </div>
      
      <!-- Featured Playlists -->
      <% if @featured_playlists.any? %>
        <div class="mb-20">
          <h3 class="text-3xl font-semibold text-center mb-12 text-gray-200">
            Featured Selections
          </h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            <% @featured_playlists.each do |playlist| %>
              <div class="group cursor-pointer" onclick="window.open('<%= playlist.spotify_url %>', '_blank')">
                <div class="relative overflow-hidden rounded-2xl bg-gradient-to-br from-gray-800 to-gray-900 p-6 transform transition-all duration-300 group-hover:scale-105 group-hover:shadow-2xl group-hover:shadow-yellow-500/20">
                  <!-- Vinyl Record Effect -->
                  <div class="absolute top-4 right-4 w-12 h-12 rounded-full border-4 border-yellow-400 opacity-20"></div>
                  <div class="absolute top-6 right-6 w-8 h-8 rounded-full bg-gray-800"></div>
                  
                  <% if playlist.cover_image_url.present? %>
                    <img src="<%= playlist.cover_image_url %>" alt="<%= playlist.title %>" class="w-full h-48 object-cover rounded-xl mb-4">
                  <% else %>
                    <div class="w-full h-48 bg-gradient-to-br from-yellow-400/20 to-red-500/20 rounded-xl mb-4 flex items-center justify-center">
                      <div class="text-4xl">üéµ</div>
                    </div>
                  <% end %>
                  
                  <h4 class="text-xl font-semibold text-white mb-2 line-clamp-2">
                    <%= playlist.title %>
                  </h4>
                  <p class="text-gray-400 text-sm mb-3 line-clamp-2">
                    <%= playlist.description %>
                  </p>
                  <div class="flex items-center justify-between text-sm text-gray-500">
                    <span><%= playlist.track_count %> tracks</span>
                    <div class="flex flex-wrap gap-1">
                      <% playlist.categories.each do |category| %>
                        <span class="px-2 py-1 bg-yellow-400/20 text-yellow-400 rounded-full text-xs">
                          <%= category.name %>
                        </span>
                      <% end %>
                    </div>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </section>

  <!-- Categories Navigation -->
  <section class="py-8">
    <div class="container mx-auto px-6 max-w-4xl">
      <h2 class="text-3xl font-bold text-center text-white mb-4">
        üéµ Explore by Category üéµ
      </h2>
      <p class="text-center text-yellow-400 mb-6 font-semibold text-lg animate-pulse">
        üëá Click to expand and discover more playlists üëá
      </p>
      
      <!-- Show All Button -->
      <div id="show-all-container" class="text-center mb-6" style="display: none;">
        <button 
          class="category-btn px-6 py-3 bg-gradient-to-r from-yellow-500 to-yellow-600 text-black rounded-lg font-bold text-lg hover:from-yellow-400 hover:to-yellow-500 transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-yellow-500/25"
          data-category-id=""
        >
          üåç Show All Playlists
        </button>
      </div>
      
      <!-- Dynamic Collapsible Tree Structure -->
      <% if @main_families.any? %>
        <div class="space-y-4">
          <% @main_families.each do |family| %>
            <div class="tree-node" id="family-<%= family.id %>-node" data-family-id="<%= family.id %>">
              <% family_has_children = family.children.any? %>
              <div class="tree-header <%= family_has_children ? 'cursor-pointer' : '' %> flex items-center justify-between p-4 rounded-xl bg-gradient-to-r <%= family.family_color || 'from-gray-600/80 to-gray-500/80' %> hover:from-gray-500/90 hover:to-gray-400/90 transition-all duration-300 transform hover:scale-102 shadow-lg border-2 border-yellow-400/50" <%= family_has_children ? "onclick=\"toggleTreeSection('family-#{family.id}')\"" : '' %>>
                <div class="flex items-center gap-3">
                  <% if family_has_children %>
                    <span class="tree-arrow text-2xl text-yellow-300 transform transition-transform duration-200 font-bold" id="family-<%= family.id %>-arrow">‚ñ∂</span>
                  <% end %>
                  <button class="category-btn text-xl font-bold text-white drop-shadow-lg hover:text-yellow-300"
                          data-category-id="<%= family.id %>"
                          data-category-color="<%= family.color %>"
                          onclick="event.stopPropagation(); window.playlistLoader.selectCategory(<%= family.id %>, '<%= j family.name %>', '<%= family.color %>'); expandFamily(<%= family.id %>); showOnlyFamilyByChildCategory(<%= family.id %>);">
                    <%= family.family_emoji || 'üéµ' %> <%= family.name.upcase %> <%= family.family_emoji || 'üéµ' %>
                  </button>
                  <span class="px-3 py-1 bg-black/30 rounded-full text-sm font-bold text-yellow-300 border border-yellow-400/50">
                    <%= family.playlists.count %> playlists / <%= family.playlists.sum(:track_count) %> tracks
                  </span>
                </div>
              </div>
              <div class="tree-content hidden ml-6 mt-3 space-y-2 border-l-4 border-yellow-500/50 pl-4" id="family-<%= family.id %>-content">
                <!-- Family Root Categories -->
                <% family.children.order(:position, :name).each do |root_category| %>
                  <div class="tree-node">
                    <% root_has_children = root_category.children.any? %>
                    <div class="tree-header <%= root_has_children ? 'cursor-pointer' : '' %> flex items-center justify-between p-3 rounded-lg bg-gradient-to-r <%= family.family_color || 'from-gray-700/60 to-gray-600/60' %> hover:from-gray-600/70 hover:to-gray-500/70 transition-all duration-200 border border-gray-400/30" <%= root_has_children ? "onclick=\"toggleTreeSection('root-#{root_category.id}')\"" : '' %>>
                      <div class="flex items-center gap-2">
                        <% if root_has_children %>
                          <span class="tree-arrow text-lg text-yellow-300 transform transition-transform duration-200 font-bold" id="root-<%= root_category.id %>-arrow">‚ñ∂</span>
                        <% end %>
                        <button class="category-btn text-white hover:text-yellow-300 transition-colors font-bold text-lg" 
                                data-category-id="<%= root_category.id %>"
                                data-category-color="<%= root_category.color %>"
                                onclick="event.stopPropagation(); window.playlistLoader.selectCategory(<%= root_category.id %>, '<%= root_category.name %>', '<%= root_category.color %>'); showOnlyFamilyByChildCategory(<%= root_category.id %>);">
                          <%= root_category.emoji || 'üé∂' %> <%= root_category.name %>
                        </button>
                        <span class="px-2 py-1 bg-black/30 rounded text-xs font-bold text-yellow-300"><%= root_category.playlists.count %> playlists / <%= root_category.playlists.sum(:track_count) %> tracks</span>
                      </div>
                    </div>
                    <div class="tree-content hidden ml-6 mt-2 space-y-1" id="root-<%= root_category.id %>-content">
                      <% root_category.children.order(:position, :name).each do |child| %>
                        <div class="flex items-center gap-2 p-2 rounded-lg bg-gray-900/30 hover:bg-gray-800/50 transition-colors border border-gray-700/30">
                          <button class="category-btn text-gray-200 hover:text-yellow-400 transition-colors font-semibold" 
                                  data-category-id="<%= child.id %>"
                                  data-category-color="<%= child.color %>"
                                  onclick="window.playlistLoader.selectCategory(<%= child.id %>, '<%= child.name %>', '<%= child.color %>'); showOnlyFamilyByChildCategory(<%= child.id %>);">
                            ‚Ü≥ <%= child.emoji || 'üéµ' %> <%= child.name %>
                          </button>
                          <span class="px-2 py-0.5 bg-black/30 rounded text-xs font-bold text-gray-300">(<%= child.playlists.count %> / <%= child.playlists.sum(:track_count) %>)</span>
                        </div>
                      <% end %>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>
        </div>
      <% elsif @categories.any? %>
        <!-- Fallback: show root categories if no main families flagged -->
        <div class="space-y-4">
          <% @categories.each do |root_category| %>
            <div class="tree-node">
              <div class="tree-header cursor-pointer flex items-center justify-between p-4 rounded-xl bg-gradient-to-r from-gray-700/80 to-gray-600/80 hover:from-gray-600/90 hover:to-gray-500/90 transition-all duration-300 transform hover:scale-102 shadow-lg border-2 border-yellow-400/30" onclick="toggleTreeSection('rootonly-<%= root_category.id %>')">
                <div class="flex items-center gap-3">
                  <span class="tree-arrow text-2xl text-yellow-300 transform transition-transform duration-200 font-bold" id="rootonly-<%= root_category.id %>-arrow">‚ñ∂</span>
                  <span class="text-xl font-bold text-white drop-shadow-lg">
                    <%= root_category.emoji || 'üé∂' %> <%= root_category.name %>
                  </span>
                  <span class="px-3 py-1 bg-black/30 rounded-full text-sm font-bold text-yellow-300 border border-yellow-400/30">
                    <%= root_category.playlists.count %> playlists / <%= root_category.playlists.sum(:track_count) %> tracks
                  </span>
                </div>
              </div>
              <div class="tree-content hidden ml-6 mt-3 space-y-1 border-l-4 border-yellow-500/30 pl-4" id="rootonly-<%= root_category.id %>-content">
                <% root_category.children.each do |child| %>
                  <div class="flex items-center gap-2 p-2 rounded-lg bg-gray-900/30 hover:bg-gray-800/50 transition-colors border border-gray-700/30">
                    <button class="category-btn text-gray-200 hover:text-yellow-400 transition-colors font-semibold" 
                            data-category-id="<%= child.id %>"
                            data-category-color="<%= child.color %>"
                            onclick="window.playlistLoader.selectCategory(<%= child.id %>, '<%= child.name %>', '<%= child.color %>')">
                      ‚Ü≥ <%= child.emoji || 'üéµ' %> <%= child.name %>
                    </button>
                    <span class="px-2 py-0.5 bg-black/30 rounded text-xs font-bold text-gray-300">(<%= child.playlists.count %> / <%= child.playlists.sum(:track_count) %>)</span>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>
        </div>
      <% else %>
        <!-- Empty State -->
        <div class="text-center py-16">
          <div class="text-6xl mb-4">üéµ</div>
          <h3 class="text-2xl font-bold text-white mb-4">No Categories Yet</h3>
          <p class="text-gray-400 mb-6">Start building your music collection by adding categories and playlists through the admin panel.</p>
        </div>
      <% end %>
    </div>
  </section>

  <!-- Infinite Scroll Playlists -->
  <section class="py-16">
    <div class="container mx-auto px-6">
      <div id="playlists-container" class="grid grid-cols-1 gap-6">
        <!-- Playlists will be loaded here via JavaScript -->
      </div>
      
      <!-- Loading Spinner -->
      <div id="loading-spinner" class="text-center py-12 hidden">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-yellow-400"></div>
        <p class="text-gray-400 mt-4">Loading more playlists...</p>
      </div>
      
      <!-- End of Content -->
      <div id="end-of-content" class="text-center py-12 hidden">
        <p class="text-gray-500">You've reached the end of the playlist collection</p>
        <div class="mt-4 text-4xl">üéµ</div>
      </div>
    </div>
  </section>
</div>

<script>
  class PlaylistLoader {
    constructor() {
      this.currentOffset = 0;
      this.currentCategory = null;
      this.isLoading = false;
      this.hasMore = true;
      this.container = document.getElementById('playlists-container');
      this.loadingSpinner = document.getElementById('loading-spinner');
      this.endOfContent = document.getElementById('end-of-content');
      
      this.init();
    }
    
    init() {
      this.loadPlaylists();
      this.setupInfiniteScroll();
      this.setupCategoryButtons();
    }
    
    setupInfiniteScroll() {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && this.hasMore && !this.isLoading) {
            this.loadPlaylists();
          }
        });
      });
      
      observer.observe(this.loadingSpinner);
    }
    
    setupCategoryButtons() {
      document.querySelectorAll('.category-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const categoryId = e.target.dataset.categoryId;
          
          // Update active button - reset all buttons
          document.querySelectorAll('.category-btn').forEach(b => {
            b.classList.remove('text-yellow-400', 'active');
            b.classList.add('text-gray-300');
          });
          
          // Highlight selected button
          e.target.classList.remove('text-gray-300');
          e.target.classList.add('text-yellow-400', 'active');
          
          // Show/hide "Show All" button
          const showAllContainer = document.getElementById('show-all-container');
          if (categoryId) {
            showAllContainer.style.display = 'block';
          } else {
            showAllContainer.style.display = 'none';
          }
          
          // Reset and load playlists
          this.currentCategory = categoryId || null;
          this.currentOffset = 0;
          this.hasMore = true;
          this.container.innerHTML = '';
          this.endOfContent.classList.add('hidden');
          
          this.loadPlaylists();
        });
      });
    }
    
    selectCategory(categoryId, categoryName, categoryColor) {
      // Update active button - reset all buttons
      document.querySelectorAll('.category-btn').forEach(b => {
        b.classList.remove('text-yellow-400', 'active');
        b.classList.add('text-gray-300');
      });
      
      // Highlight the selected category button
      const targetButton = document.querySelector(`[data-category-id="${categoryId}"]`);
      if (targetButton) {
        targetButton.classList.remove('text-gray-300');
        targetButton.classList.add('text-yellow-400', 'active');
      }
      
      // Show "Show All" button
      const showAllContainer = document.getElementById('show-all-container');
      showAllContainer.style.display = 'block';
      
      // Reset and load playlists for this category
      this.currentCategory = categoryId;
      this.currentOffset = 0;
      this.hasMore = true;
      this.container.innerHTML = '';
      this.endOfContent.classList.add('hidden');
      
      this.loadPlaylists();
    }
    
    async loadPlaylists() {
      if (this.isLoading) return;
      
      this.isLoading = true;
      this.loadingSpinner.classList.remove('hidden');
      
      try {
        const url = this.currentCategory 
          ? `/api/categories/${this.currentCategory}/playlists?offset=${this.currentOffset}`
          : `/api/playlists?offset=${this.currentOffset}`;
          
        const response = await fetch(url);
        const data = await response.json();
        
        if (data.playlists && data.playlists.length > 0) {
          data.playlists.forEach(playlist => {
            this.renderPlaylist(playlist);
          });
          
          this.currentOffset += data.playlists.length;
          this.hasMore = data.has_more;
        } else {
          this.hasMore = false;
        }
        
        if (!this.hasMore) {
          this.endOfContent.classList.remove('hidden');
        }
        
      } catch (error) {
        console.error('Error loading playlists:', error);
      } finally {
        this.isLoading = false;
        this.loadingSpinner.classList.add('hidden');
      }
    }
    
    renderPlaylist(playlist) {
      const playlistElement = document.createElement('div');
      playlistElement.className = 'group cursor-pointer transform transition-all duration-300 hover:scale-105';
      playlistElement.onclick = () => window.open(playlist.spotify_url, '_blank');
      
      playlistElement.innerHTML = `
        <div class="relative overflow-hidden rounded-2xl bg-gray-900 p-4 hover:shadow-xl transition">
          <div class="flex gap-4 items-start">
            ${playlist.cover_image_url ? 
              `<img src="${playlist.cover_image_url}" alt="${playlist.title}" class="w-40 h-40 object-cover rounded-xl flex-shrink-0">` :
              `<div class=\"w-40 h-40 bg-gray-800 rounded-xl flex-shrink-0 flex items-center justify-center\"><div class=\"text-3xl\">üéµ</div></div>`
            }
            <div class="flex-1">
              <h4 class="text-2xl font-semibold text-white mb-2">
                ${playlist.title}
              </h4>
              ${playlist.description ? `<p class=\"text-gray-300 text-sm mb-3\">${playlist.description}</p>` : ''}
              <div class="flex flex-wrap items-center gap-3 text-sm text-gray-400 mb-3">
                <span>${playlist.track_count} tracks</span>
                ${playlist.duration ? `<span>‚Ä¢ ${playlist.duration}</span>` : ''}
                <button class="px-3 py-1 rounded-md bg-green-500 text-black font-semibold hover:bg-green-400" onclick="event.stopPropagation(); window.open('${playlist.spotify_url}','_blank')">Open on Spotify</button>
              </div>
              <div class="flex flex-wrap gap-2 items-start">
                ${playlist.categories
                  .sort((a, b) => {
                    if (a.is_root && !b.is_root) return -1;
                    if (!a.is_root && b.is_root) return 1;
                    return a.name.localeCompare(b.name);
                  })
                  .map(category => 
                    `<button class=\"category-tag-btn px-3 py-1.5 rounded-full text-xs hover:scale-105 transition-all duration-200 ${category.is_root ? 'bg-gradient-to-r from-gray-800/80 to-gray-700/80 text-gray-100 border border-gray-600 hover:from-gray-700/90 hover:to-gray-600/90 font-semibold shadow-lg' : 'border'}\"
                     data-category-id=\"${category.id}\" 
                     data-category-name=\"${category.name}\"
                     data-category-color=\"${category.color}\"
                     data-is-root=\"${category.is_root}\"
                      onclick=\"event.stopPropagation(); window.playlistLoader.selectCategory(${category.id}, '${category.name}', '${category.color}')\" ` +
                      (!category.is_root ? `style=\\"` +
                        (category.color ? `color:${category.color}; border-color:${category.color}; background: rgba(${parseInt(category.color.slice(1,3), 16)}, ${parseInt(category.color.slice(3,5), 16)}, ${parseInt(category.color.slice(5,7), 16)}, 0.15);` : `color:#FDE68A; border-color:#FDE68A55; background: rgba(253, 230, 138, 0.15);`) +
                      `\\"` : '') +
                    `>`
                      + (category.is_root ? category.name : '‚Ü≥ ' + category.name) +
                    `</button>`
                  ).join('')}
              </div>
            </div>
          </div>
        </div>
      `;
      
      this.container.appendChild(playlistElement);
    }
  }
  
  // Tree toggle function
  function toggleTreeSection(sectionId) {
    const content = document.getElementById(sectionId + '-content');
    const arrow = document.getElementById(sectionId + '-arrow');
    
    if (content && arrow) {
      if (content.classList.contains('hidden')) {
        content.classList.remove('hidden');
        arrow.style.transform = 'rotate(90deg)';
      } else {
        content.classList.add('hidden');
        arrow.style.transform = 'rotate(0deg)';
      }
    }
  }

  // Expand the family content programmatically
  function expandFamily(familyId) {
    const content = document.getElementById('family-' + familyId + '-content');
    const arrow = document.getElementById('family-' + familyId + '-arrow');
    if (content && content.classList.contains('hidden')) {
      content.classList.remove('hidden');
      if (arrow) arrow.style.transform = 'rotate(90deg)';
    }
  }

  // Hide all other families and show only the one containing the selected category/family
  function showOnlyFamilyByChildCategory(selectedId) {
    // Find which family node contains the selected button
    const selectedBtn = document.querySelector(`[data-category-id="${selectedId}"]`);
    if (!selectedBtn) return;
    const familyNode = selectedBtn.closest('[id^="family-"][id$="-node"]');
    const allFamilies = document.querySelectorAll('[id^="family-"][id$="-node"]');
    allFamilies.forEach(node => {
      if (familyNode && node !== familyNode) {
        node.style.display = 'none';
      } else {
        node.style.display = 'block';
      }
    });

    // Ensure Show All appears
    const showAllContainer = document.getElementById('show-all-container');
    if (showAllContainer) showAllContainer.style.display = 'block';
  }
  
  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    window.playlistLoader = new PlaylistLoader();

    // Hook up Show All to restore visibility of all families
    const showAllContainer = document.getElementById('show-all-container');
    if (showAllContainer) {
      const btn = showAllContainer.querySelector('button');
      if (btn) {
        btn.addEventListener('click', () => {
          document.querySelectorAll('[id^="family-"][id$="-node"]').forEach(node => {
            node.style.display = 'block';
          });
        });
      }
    }
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .category-btn {
    position: relative;
    overflow: hidden;
  }
  
  .category-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
    transition: left 0.5s;
  }
  
  .category-btn:hover::before {
    left: 100%;
  }
  
  /* Family Group Styling */
  .family-group {
    position: relative;
    padding: 2rem;
    border-radius: 20px;
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .reggae-family {
    background: linear-gradient(135deg, rgba(78, 205, 196, 0.1) 0%, rgba(0, 0, 0, 0.3) 100%);
    border-color: rgba(78, 205, 196, 0.3);
  }
  
  .hiphop-family {
    background: linear-gradient(135deg, rgba(255, 107, 107, 0.1) 0%, rgba(0, 0, 0, 0.3) 100%);
    border-color: rgba(255, 107, 107, 0.3);
  }
  
  .cross-connections {
    background: linear-gradient(135deg, rgba(221, 160, 221, 0.1) 0%, rgba(0, 0, 0, 0.3) 100%);
    border-radius: 20px;
    padding: 2rem;
    border: 1px solid rgba(221, 160, 221, 0.3);
  }
  
  /* Family Group Hover Effects */
  .family-group:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease;
  }
  
  .parent-category {
    position: relative;
    z-index: 10;
  }
  
  .child-category {
    position: relative;
    z-index: 10;
  }
  
  /* Enhanced hover effects */
  .parent-category:hover {
    transform: scale(1.05);
    box-shadow: 0 0 20px rgba(212, 175, 55, 0.4);
  }
  
  .child-category:hover {
    transform: scale(1.1);
    box-shadow: 0 0 15px rgba(212, 175, 55, 0.3);
  }
  
  /* Family connection indicators */
  .family-group h4::after {
    content: 'üå≥';
    margin-left: 10px;
    opacity: 0.7;
  }
  
  .cross-connections h4::after {
    content: 'üîó';
    margin-left: 10px;
    opacity: 0.7;
  }
</style>