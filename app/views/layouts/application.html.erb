<!DOCTYPE html>
<html class="h-full">
  <head>
    <title><%= content_for(:title) || "Digital Ital Crates" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="description" content="Digital Ital: Only good things in these curated Reggae & Hip-Hop playlists - Daily discoveries from Digital Ital">
    
    <!-- Open Graph / Social Media Meta Tags -->
    <meta property="og:title" content="<%= content_for(:title) || 'Digital Ital Crates' %>">
    <meta property="og:description" content="Digital Ital: Only good things in these curated Reggae & Hip-Hop playlists - Daily discoveries from Digital Ital">
    <meta property="og:image" content="<%= request.base_url %>/icon.svg">
    <meta property="og:url" content="<%= request.original_url %>">
    <meta property="og:type" content="website">
    <meta property="og:site_name" content="Digital Ital Crates">
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="<%= content_for(:title) || 'Digital Ital Crates' %>">
    <meta name="twitter:description" content="Curated Reggae & Hip-Hop playlists - Daily discoveries from Digital Ital">
    <meta name="twitter:image" content="<%= request.base_url %>/icon.svg">
    
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-BMP2Q44CMT"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-BMP2Q44CMT');
    </script>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
    
    <!-- Analytics Tracking -->
    <script>
      (function() {
        let sessionId = localStorage.getItem('analytics_session_id');
        if (!sessionId) {
          sessionId = Date.now() + '-' + Math.random().toString(36).substr(2, 9);
          localStorage.setItem('analytics_session_id', sessionId);
        }
        
        let pageStartTime = Date.now();
        let currentUrl = window.location.pathname;
        
        function trackPageView() {
          const data = {
            session_id: sessionId,
            url: currentUrl,
            page_type: detectPageType(),
            category_id: getCategoryId(),
            playlist_id: getPlaylistId(),
            action_type: 'page_view',
            time_on_page: Math.floor((Date.now() - pageStartTime) / 1000)
          };
          
          console.log('Analytics tracking:', data); // Debug log
          
          fetch('/api/analytics/track', {
            method: 'POST',
            headers: { 
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            },
            body: JSON.stringify(data)
          }).then(response => {
            console.log('Analytics response:', response.status);
            return response.json();
          }).then(data => {
            console.log('Analytics success:', data);
          }).catch(error => {
            console.error('Analytics error:', error);
          });
        }
        
        function detectPageType() {
          const path = window.location.pathname;
          if (path === '/') return 'home';
          if (path.startsWith('/categories/')) return 'category';
          if (path.startsWith('/playlists/')) return 'playlist';
          if (path === '/whats-new') return 'whats_new';
          return 'other';
        }
        
        function getCategoryId() {
          const match = window.location.pathname.match(/\/categories\/([^\/]+)/);
          return match ? match[1] : null;
        }
        
        function getPlaylistId() {
          const match = window.location.pathname.match(/\/playlists\/(\d+)/);
          return match ? parseInt(match[1]) : null;
        }
        
        // Track on page load
        document.addEventListener('DOMContentLoaded', trackPageView);
        document.addEventListener('turbo:load', trackPageView);
        
        // Track before leaving (capture time on page)
        document.addEventListener('turbo:before-visit', trackPageView);
        window.addEventListener('beforeunload', trackPageView);
        
        // Track search queries
        window.trackSearch = function(query) {
          fetch('/api/analytics/track', {
            method: 'POST',
            headers: { 
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            },
            body: JSON.stringify({
              session_id: sessionId,
              url: currentUrl,
              page_type: 'search',
              search_query: query,
              action_type: 'search',
              time_on_page: Math.floor((Date.now() - pageStartTime) / 1000)
            })
          }).catch(() => {});
        };
      })();
    </script>
    
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
      
      :root {
        --reggae-gold: #B8860B; /* Darker gold, more serious */
        --reggae-red: #8B0000; /* Dark blood red, not bright pink */
        --reggae-green: #1B5E20; /* Deep forest green */
        --vinyl-black: #0d0d0d;
        --wood-brown: #3E2723;
        --dub-purple: #311B92;
        --soundsystem-orange: #E65100; /* Deep orange, not bright */
      }
      
      body {
        font-family: 'Inter', sans-serif;
        background: linear-gradient(135deg, #0d0d0d 0%, #1a1a1a 50%, #0d0d0d 100%);
        min-height: 100vh;
        color: #e0e0e0; /* Better text contrast */
      }
      
      .vinyl-texture {
        background-image: 
          radial-gradient(circle at 20% 20%, rgba(255,255,255,0.1) 1px, transparent 1px),
          radial-gradient(circle at 80% 80%, rgba(255,255,255,0.05) 1px, transparent 1px);
        background-size: 50px 50px;
      }
      
      .wood-grain {
        background: linear-gradient(45deg, #8B4513 0%, #A0522D 25%, #8B4513 50%, #654321 75%, #8B4513 100%);
        background-size: 20px 20px;
      }
      
      .glow-effect {
        box-shadow: 0 0 20px rgba(212, 175, 55, 0.3);
      }
      
      .reggae-gradient {
        background: linear-gradient(135deg, var(--reggae-gold) 0%, var(--reggae-red) 50%, var(--reggae-green) 100%);
      }
    </style>
  </head>

  <body class="h-full vinyl-texture">
    <div class="pb-30">
      <%= yield %>
    </div>
    
    <!-- Sticky Footer -->
    <footer id="sticky-footer" class="fixed bottom-0 left-0 right-0 bg-black/90 backdrop-blur-sm border-t border-gray-700/50 py-4 transform translate-y-full transition-transform duration-300" style="z-index: 9999 !important;">
      <div class="container mx-auto px-6">
           <div class="text-center">
             <!-- Contact and Support Sections - Side by Side on Desktop, Stacked on Mobile -->
             <div class="flex flex-col lg:flex-row lg:justify-center lg:gap-8 mb-4">
               <!-- Contact Section -->
               <div class="mb-4 lg:mb-0">
                 <h3 class="text-sm font-semibold text-white mb-2">Questions? Want to connect?</h3>
                 <div class="flex flex-col sm:flex-row items-center justify-center gap-3 sm:gap-6">
                   <a href="https://www.instagram.com/digital.ital/" target="_blank" class="flex items-center gap-2 px-3 py-1.5 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg text-sm" style="background: linear-gradient(45deg, #833AB4 0%, #E1306C 50%, #FD1D1D 100%);">
                     <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24">
                       <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                     </svg>
                     <span class="text-white font-semibold">@digital.ital</span>
                   </a>
                   
                   <div class="flex items-center gap-2 px-3 py-1.5 bg-gray-800 hover:bg-gray-700 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg text-sm relative">
                     <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24">
                       <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                     </svg>
                     <span class="text-white font-semibold select-all cursor-pointer" onclick="copyEmailToClipboard(this)" title="Click to copy email">digital.ital.soundsystem@gmail.com</span>
                     
                     <!-- Copied Tooltip -->
                     <div id="email-copied-tooltip" class="absolute -top-12 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-3 py-1 rounded-lg text-xs font-semibold opacity-0 transition-opacity duration-300 pointer-events-none z-50">
                       ✅ Copied!
                     </div>
                   </div>
                 </div>
               </div>
               
               <!-- Support Section -->
               <div class="lg:border-l lg:border-gray-600/30 lg:pl-8">
                 <p class="text-gray-400 text-xs mb-2">Support this passion project</p>
                 <div class="flex justify-center gap-3">
                   <a href="https://buymeacoffee.com/digitalital" target="_blank" class="inline-flex items-center gap-1 px-3 py-1.5 bg-yellow-600 hover:bg-yellow-500 text-white text-xs font-semibold rounded-full transition-colors">
                     ☕ Coffee
                   </a>
                   <a href="https://ko-fi.com/digitalital" target="_blank" class="inline-flex items-center gap-1 px-3 py-1.5 bg-pink-600 hover:bg-pink-500 text-white text-xs font-semibold rounded-full transition-colors">
                     🎵 Ko-fi
                   </a>
                 </div>
                 <p class="text-gray-500 text-xs mt-2">
                   Open source • No ads • Pure passion for music curation
                 </p>
               </div>
             </div>
          
          <p class="text-gray-500 text-xs mt-4 text-center">
            Built with ❤️ by Digital Ital<br>
            Ruby on Rails • Spotify API • Heroku • Tailwind CSS<br>
            <a href="https://github.com/Digital-Ital/digital_ital_playlists" target="_blank" class="text-gray-400 hover:text-white transition-colors">
              View source on GitHub
            </a>
          </p>
        </div>
      </div>
    </footer>

    <script>
      // Global footer management
      window.footerManager = {
        footer: null,
        isFooterVisible: false,
        lastScrollY: 0,
        ticking: false,
        
        init: function() {
          this.footer = document.getElementById('sticky-footer');
          if (!this.footer) {
            console.log('Footer not found!');
            return;
          }
          
          console.log('Footer found, initializing...');
          
          // Ensure footer starts hidden
          this.footer.classList.add('translate-y-full');
          this.isFooterVisible = false;
          this.lastScrollY = window.scrollY;
          
          // Bind scroll handler
          window.addEventListener('scroll', this.requestTick.bind(this), { passive: true });
          
          console.log('Footer initialized successfully');
        },
        
        updateFooter: function() {
          if (!this.footer) return;
          
          const scrollY = window.scrollY;
          const scrollThreshold = 100; // Show footer after scrolling 100px
          const hideThreshold = 50; // Hide footer when scrolling back up to top 50px

          if (scrollY > scrollThreshold && !this.isFooterVisible) {
            // Show footer
            console.log('Showing footer at scroll:', scrollY);
            this.footer.classList.remove('translate-y-full');
            this.isFooterVisible = true;
          } else if (scrollY <= hideThreshold && this.isFooterVisible) {
            // Hide footer when back at top
            console.log('Hiding footer at scroll:', scrollY);
            this.footer.classList.add('translate-y-full');
            this.isFooterVisible = false;
          }

          this.lastScrollY = scrollY;
          this.ticking = false;
        },
        
        requestTick: function() {
          if (!this.ticking) {
            requestAnimationFrame(this.updateFooter.bind(this));
            this.ticking = true;
          }
        },
        
        reset: function() {
          if (!this.footer) return;
          this.footer.classList.add('translate-y-full');
          this.isFooterVisible = false;
          this.lastScrollY = window.scrollY;
        }
      };

      // Initialize on DOM ready
      document.addEventListener('DOMContentLoaded', function() {
        window.footerManager.init();
      });
      
      // Reset on turbo navigation
      document.addEventListener('turbo:load', function() {
        window.footerManager.reset();
      });
      
      // Also reset on turbo:before-visit to ensure clean state
      document.addEventListener('turbo:before-visit', function() {
        window.footerManager.reset();
      });

      // Email copy functionality
      window.copyEmailToClipboard = function(element) {
        const email = element.textContent.trim();
        const tooltip = document.getElementById('email-copied-tooltip');
        
        // Use modern clipboard API if available
        if (navigator.clipboard && window.isSecureContext) {
          navigator.clipboard.writeText(email).then(function() {
            showCopiedTooltip(tooltip);
          }).catch(function() {
            fallbackCopyToClipboard(email, tooltip);
          });
        } else {
          fallbackCopyToClipboard(email, tooltip);
        }
      };

      function fallbackCopyToClipboard(text, tooltip) {
        // Create temporary textarea element
        const textArea = document.createElement('textarea');
        textArea.value = text;
        textArea.style.position = 'fixed';
        textArea.style.left = '-999999px';
        textArea.style.top = '-999999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        
        try {
          document.execCommand('copy');
          showCopiedTooltip(tooltip);
        } catch (err) {
          console.error('Failed to copy email: ', err);
        }
        
        document.body.removeChild(textArea);
      }

      function showCopiedTooltip(tooltip) {
        // Show tooltip
        tooltip.style.opacity = '1';
        
        // Hide tooltip after 2 seconds
        setTimeout(function() {
          tooltip.style.opacity = '0';
        }, 2000);
      }
    </script>
  </body>
</html>
